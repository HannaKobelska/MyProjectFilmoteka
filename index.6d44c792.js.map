{"mappings":"AAsBO,SAASA,EAAkBC,EAAMC,GAEpC,MAAMC,EAAaF,EAAKG,QAAQ,IAAK,KAIrC,OAFAC,QAAQC,IAAI,4FAAmDH,UAAmBD,KAE3EK,MAAM,4FAAmDJ,UAAmBD,KAC9EM,MAAKC,GACKA,EAASC,SC5B5B,MAAMC,EAAO,CACXC,gBAAiBC,SAASC,cAAc,2BACxCC,cAAeF,SAASC,cAAc,2BACtCE,eAAgBH,SAASC,cAAc,eAEvCG,aAAcJ,SAASC,cAAc,4BAGvC,IAAII,EAAa,EAEbC,EAAc,GDRX,IAA6BjB,ECqGpC,SAASkB,EAAkBC,GAEzBhB,QAAQC,IAAIe,GAEVV,EAAKC,gBAAgBU,UAAYD,EAAOE,QAAQC,KAAI,EAACC,YAAEA,EAAWC,UAAEA,EAASC,MAAEA,EAAKC,aAAEA,EAAYC,GAAEA,KACzF,0JAGyCJ,WAAqBE,gJAEzBA,yHA3FpD,SAAoBD,GAClB,IAAII,EAAY,GAEhB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAUM,OAAQD,GAAK,EACzC,IAAK,IAAIE,EAAI,EAAGA,EAAId,EAAYa,OAAQC,GAAK,EAC3C,GAAIP,EAAUK,KAAOZ,EAAYc,GAAGJ,GAAI,CAKtC,GAJIE,GAAK,IACPD,GAAa,MAGXC,GAAK,EAEP,OADAD,GAAa,QACNA,EAGTA,GAAaX,EAAYc,GAAGhC,KAC5B,MAKN,OAAO6B,EAwE4CI,CAAWR,4IArEhE,SAAkBE,GAEhB,OADmB,IAAIO,KAAKP,GACRQ,cAqE8BC,CAAST,qGAQpDU,KAAK,IASd,SAASC,IACP5B,EAAKM,aAAauB,UAAUC,OAAO,aACnCC,YAAW,KACT/B,EAAKM,aAAauB,UAAUG,IAAI,eAC/B,KD7HMpC,MAAM,0FACRC,MAAKC,GACKA,EAASC,SCDzBF,MAAMoC,IAEL,IAAK,IAAIb,EAAI,EAAGA,EAAIa,EAAMC,OAAOb,OAAQD,GAAK,EAC5CZ,EAAY2B,KAAKF,EAAMC,OAAOd,QDfA7B,ECmDhBgB,EDjDTX,MAAM,kGAAyDL,KACjEM,MAAKC,GACKA,EAASC,UCgDnBF,KAAKY,GACX2B,MAAMR,GAGT5B,EAAKI,cAAciC,iBAAiB,UAEpC,SAAsBC,GACpBA,EAAMC,iBAEN7C,QAAQC,IAAI,mBAEVY,EAAa,EAEb,MAAMiC,EAAcxC,EAAKK,eAAeoC,MAAMC,OAE1CF,EAAYnB,OAAS,GAErBhC,EAAkBmD,EAAajC,GAC9BV,KAAKY,GACL2B,MAAMR","sources":["src/js/fetchMovies.js","src/index.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst MY_KEY = 'e09801b88bee36721ddccafeb1a578e0';\n\n\nexport function fetchMoviesTrending(pageNumber) {\n   \n    return fetch(`${BASE_URL}trending/movie/week?api_key=${MY_KEY}&page=${pageNumber}`)\n        .then(response => {\n            return response.json();\n        }\n  );\n}\n\nexport function fetchMoviesGenres() {\n   \n    return fetch(`${BASE_URL}genre/movie/list?api_key=${MY_KEY}`)\n        .then(response => {\n            return response.json();\n        }\n  );\n}\n\nexport function fetchMoviesByName(name, pageNumber) {\n\n    const searchName = name.replace(\" \", \"+\");\n\n    console.log(`${BASE_URL}search/movie?api_key=${MY_KEY}&query=${searchName}&page=${pageNumber}`);\n   \n    return fetch(`${BASE_URL}search/movie?api_key=${MY_KEY}&query=${searchName}&page=${pageNumber}`)\n        .then(response => {\n            return response.json();\n        }\n        );\n}","import { fetchMoviesTrending, fetchMoviesGenres, fetchMoviesByName } from './js/fetchMovies.js';\n\nconst refs = {\n  moviesContainer: document.querySelector('.movies-cards-container'),\n  formSearchBox: document.querySelector('.header-input-container'),\n  inputSearchBox: document.querySelector('#search-box'),\n\n  errorMessage: document.querySelector('.header-error-container'),\n  };\n\nlet pageNumber = 1;\n\nlet genresArray = [];\n\n\nfetchMoviesGenres()\n  .then((genre) => {\n\n    for (let i = 0; i < genre.genres.length; i += 1) {\n      genresArray.push(genre.genres[i]);\n    }\n\n  });\n\nfunction genresById(genre_ids) {\n  let resultstr = \"\";\n\n  for (let i = 0; i < genre_ids.length; i += 1) {\n    for (let b = 0; b < genresArray.length; b += 1) {\n      if (genre_ids[i] === genresArray[b].id) {\n        if (i >= 1) {\n          resultstr += \", \";\n        }\n\n        if (i >= 2) {\n          resultstr += \"Other\";\n          return resultstr;\n        }\n        \n        resultstr += genresArray[b].name;\n        break;\n      } \n    } \n  }\n  \n  return resultstr;\n}\n\nfunction filmDate(release_date) {\n  let filmYearDate = new Date(release_date);\n  return filmYearDate.getFullYear();\n}\n\n\n\nfetchMoviesTrending(pageNumber)\n        .then(renderMoviesCards)\n  .catch(onFetchError);\n        \n\nrefs.formSearchBox.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  \n  console.log(\"kjsfhlajshfjaks\");\n\n    pageNumber = 1;\n    \n    const movieToFind = refs.inputSearchBox.value.trim();\n  \n    if (movieToFind.length > 0) {\n         \n        fetchMoviesByName(movieToFind, pageNumber)\n        .then(renderMoviesCards)\n        .catch(onFetchError);\n\n    }\n}\n\n\n\n// refs.searchForm.addEventListener('submit', onFormSubmit);\n// refs.loadMoreBtn.addEventListener('click', onFormLoadMore);\n\n\n\n// function onFormLoadMore(event) {\n//     event.preventDefault();\n\n//     pageNumber += 1;\n\n//     const pictureToFind = refs.searchInput.value.trim();\n  \n//     if (pictureToFind.length !== 0) {\n         \n//         API.fetchPictures(pictureToFind, pageNumber)\n//         .then(renderPictureCard)\n//         .catch(onFetchError);\n\n//     }\n// }\n\n\n\nfunction renderMoviesCards(movies) {\n\n  console.log(movies);\n\n    refs.moviesContainer.innerHTML = movies.results.map(({ poster_path, genre_ids, title, release_date, id }) => {\n        return `\n        <div class=\"movie-card\">\n        <a href=\"\" class=\"movie-card-link\" data-modal-open>\n            <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${title}\" class=\"movie-card-img\" width = \"300px\">\n            <div class=\"movie-card-info-set\">\n                <h3 class=\"movie-card-info-title\">${title}</h3>\n                <div class=\"movie-card-info-details-set\">\n                  <p class=\"movie-card-info-genre\">${genresById(genre_ids)}</p>\n                  <p class=\"movie-card-info-genre\"> &nbsp; &#124; &nbsp; </p>\n                  <p class=\"movie-card-info-date\">${filmDate(release_date)}</p>\n                </div>\n            </div>\n         </a>\n       \n        </div>\n    `;\n})\n        .join('');\n    \n//     refs.loadMoreBtn.style.visibility = 'visible';\n    \n//     lightbox.refresh();\n    \n}\n\n\nfunction onFetchError() {\n  refs.errorMessage.classList.remove('is-hidden');\n  setTimeout(() => {\n    refs.errorMessage.classList.add('is-hidden');\n  }, 2000);\n}\n\n"],"names":["$16230cf6cab73dd4$export$37a4223ecda5c4cf","name","pageNumber","searchName","replace","console","log","fetch","then","response","json","$1f0dc3b9307be026$var$refs","moviesContainer","document","querySelector","formSearchBox","inputSearchBox","errorMessage","$1f0dc3b9307be026$var$pageNumber","$1f0dc3b9307be026$var$genresArray","$1f0dc3b9307be026$var$renderMoviesCards","movies","innerHTML","results","map","poster_path","genre_ids","title","release_date","id","resultstr","i","length","b","$1f0dc3b9307be026$var$genresById","Date","getFullYear","$1f0dc3b9307be026$var$filmDate","join","$1f0dc3b9307be026$var$onFetchError","classList","remove","setTimeout","add","genre","genres","push","catch","addEventListener","event","preventDefault","movieToFind","value","trim"],"version":3,"file":"index.6d44c792.js.map"}