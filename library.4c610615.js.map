{"mappings":"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","sources":["src/js/modal_lib.js"],"sourcesContent":["import { renderLibraryMovies } from './library.js';\nimport { fetchMoviesById } from './fetchMovies.js';\n\n\n  const refs = {\n    openModalContainer: document.querySelector('.movies-cards-container'),\n    modalCloseBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n    modalMovieCardContainer: document.querySelector('.movie-modal-card'),\n};\n  \nlet buttonWatchedStatus = 1;\nlet buttonQueueStatus = 1;\n\nlet movieId;\n\n  refs.openModalContainer.addEventListener('click', toggleModal);\n  refs.modalCloseBtn.addEventListener('click', closeByCross);\n  refs.modal.addEventListener('click', closeByBackdrop);\n\n\n  window.addEventListener('keydown', onEscKeyPress);\n\nfunction toggleModal(event) {\n    \n    event.preventDefault();\n\n    let elementOnClick = event.target.closest(\"a\");\n\n    if (elementOnClick) {\n      console.log(elementOnClick.getAttribute(`data-id`));\n      \n      movieId = elementOnClick.getAttribute(`data-id`);\n\n        document.body.classList.toggle(\"modal-open\");\n        refs.modal.classList.toggle('is-hidden');\n      \n      fetchMoviesById(movieId)\n        .then(renderMovieModalCard)\n        .catch(onFetchMoviesByIdError);\n      \n      \n      \n\n    }\n\n\n  }\n\n  function closeByCross() {\n    refs.modal.classList.add('is-hidden');\n    document.body.classList.remove(\"modal-open\");\n  }\n\n\n  function onEscKeyPress(event) {\n    if (event.code === 'Escape') {\n      refs.modal.classList.add('is-hidden');\n      document.body.classList.remove(\"modal-open\");\n    }\n  }\n\n  function closeByBackdrop(event) {\n    if (event.target === refs.modal) {\n      refs.modal.classList.add('is-hidden');\n      document.body.classList.remove(\"modal-open\");\n    }\n  }\n\nfunction onFetchMoviesByIdError() {\n  refs.modalMovieCardContainer.innerHTML = `Movie's info was not find!!! :-(  Sorry!!!`;\n}\n\nfunction renderMovieModalCard(movieInfo) {\n  console.log(movieInfo);\n\n  refs.modalMovieCardContainer.innerHTML = \n\n    `\n    <img src=\"https://image.tmdb.org/t/p/w500${movieInfo.poster_path}\" alt=\"${movieInfo.original_title}\" class=\"modal__img\" />\n\n        <div class=\"modal__info-block\">\n        \n        <ul class=\"modal__info discription__modal\">\n        <li class=\"discription__modal-item\">\n          <h4 class=\"discription__modal-title\">Vote / Votes</h4>\n          <p class=\"discription__modal-text\">\n            <span class=\"discription__modal-text-vote\">${movieInfo.vote_average}</span>\n            <span class=\"discription__modal-text-slash\">/</span>\n            <span class=\"discription__modal-text-votes\">${movieInfo.vote_count}</span>\n          </p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <h4 class=\"discription__modal-title\">Popularity</h4>\n          <p class=\"discription__modal-text\">${movieInfo.popularity.toFixed(1)}</p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <h4 class=\"discription__modal-title\">Original Title</h4>\n          <p class=\"discription__modal-text\">${movieInfo.original_title}</p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <h4 class=\"discription__modal-title\">Genre</h4>\n          <p class=\"discription__modal-text\">FFFFFFFF</p>\n        </li>\n\n           <li class=\"modal__info about__modal\">\n      <h4 class=\"about__modal-title\">About</h4>\n      <p class=\"about__modal-text\">${movieInfo.overview}</p>\n    </li>\n      </ul>\n \n \n    <div class=\"modal-button-container\">\n      <button type=\"button\" class=\"modal-button\" id=\"modal-button-watched\">add to Watched</button>\n      <button type=\"button\" class=\"modal-button\" id=\"modal-button-queue\">add to Queue</button>\n    </div>\n  </div>\n   </div>\n   `;\n  \n  document.querySelector('#modal-button-watched').addEventListener('click', onButtonAddToWatched);\n  document.querySelector('#modal-button-queue').addEventListener('click', onButtonAddToQueue);\n  \n  if (checkLocalStorage(movieId, localStorage.getItem(\"watched-movies\"))) {\n  setButtonWatchedStatus(0);\n  } else {\n     setButtonWatchedStatus(1);\n  }\n \n   if (checkLocalStorage(movieId, localStorage.getItem(\"queue-movies\"))) {\n      setButtonQueueStatus(0);\n  } else {\n     setButtonQueueStatus(1);\n  }\n\n  }\n\nfunction onButtonAddToWatched(event) {\n  let buttonOne = document.querySelector('#modal-button-watched');\n\n  if (buttonWatchedStatus === 1) {\n    setButtonWatchedStatus(0);\n    setButtonQueueStatus(1);\n\n    // тут мы убераем из localStorage Queue и добавляем в localStorage Watched\n    const watchedMovies = localStorage.getItem(\"watched-movies\");\n    if (watchedMovies) {\n      if (checkLocalStorage(movieId, watchedMovies) === false) {\n          localStorage.setItem(\"watched-movies\", watchedMovies + \",\" + movieId);\n      }         \n    } else {\n      localStorage.setItem(\"watched-movies\", movieId);\n    }\n\n    const queueMovies = localStorage.getItem(\"queue-movies\");\n    if (checkLocalStorage(movieId, queueMovies) === true) {\n      localStorage.setItem(\"queue-movies\", removeIdLocalStorage(movieId, queueMovies));\n    }\n\n    if (refs.openModalContainer.classList.contains('movies-cards-container-library')) {\n      renderLibraryMovies();\n    }\n\n  } else {\n    setButtonWatchedStatus(1);\n    \n      const watchedMovies = localStorage.getItem(\"watched-movies\");\n      if (checkLocalStorage(movieId, watchedMovies) === true) {\n        localStorage.setItem(\"watched-movies\", removeIdLocalStorage(movieId, watchedMovies));\n    }\n\n     if (refs.openModalContainer.classList.contains('movies-cards-container-library')) {\n      renderLibraryMovies();\n    }\n    \n  }\n\n}\n  \nfunction onButtonAddToQueue(event) {\n   let buttonTwo = document.querySelector('#modal-button-queue');\n\n   if (buttonQueueStatus === 1) {\n    setButtonWatchedStatus(1);\n     setButtonQueueStatus(0);\n     \n       // тут мы убераем из localStorage Watched  и добавляем в localStorage Queue\n    const queueMovies = localStorage.getItem(\"queue-movies\");\n    if (queueMovies) {\n      if (checkLocalStorage(movieId, queueMovies) === false) {\n          localStorage.setItem(\"queue-movies\", queueMovies + \",\" + movieId);\n      }           \n    } else {\n      localStorage.setItem(\"queue-movies\", movieId);\n     }\n     \n    const watchedMovies = localStorage.getItem(\"watched-movies\");\n      if (checkLocalStorage(movieId, watchedMovies) === true) {\n        localStorage.setItem(\"watched-movies\", removeIdLocalStorage(movieId, watchedMovies));\n     }\n     \n       if (refs.openModalContainer.classList.contains('movies-cards-container-library')) {\n      renderLibraryMovies();\n    }\n\n   \n  } else {\n     setButtonQueueStatus(1);\n     \n    const queueMovies = localStorage.getItem(\"queue-movies\");\n    if (checkLocalStorage(movieId, queueMovies) === true) {\n      localStorage.setItem(\"queue-movies\", removeIdLocalStorage(movieId, queueMovies));\n     }\n     \n       if (refs.openModalContainer.classList.contains('movies-cards-container-library')) {\n      renderLibraryMovies();\n    }\n    \n  }\n  \n\n}\n  \nfunction setButtonWatchedStatus(buttonStatus) {\nlet buttonOne = document.querySelector('#modal-button-watched');\n\n  if (buttonStatus === 0) {\n\n    buttonOne.innerHTML = \"remove from Watched\";\n    buttonWatchedStatus = 0;\n    buttonOne.classList.add('pressed');\n  } else {\n    buttonOne.innerHTML = \"add to Watched\";\n    buttonWatchedStatus = 1;\n    buttonOne.classList.remove('pressed');\n  }\n}\n\nfunction setButtonQueueStatus(buttonStatus) {\nlet buttonTwo = document.querySelector('#modal-button-queue');\n\n  if (buttonStatus === 0) {\n\n    buttonTwo.innerHTML = \"remove from Queue\";\n    buttonQueueStatus = 0;\n    buttonTwo.classList.add('pressed');\n  } else {\n    buttonTwo.innerHTML = \"add to Queue\";\n    buttonQueueStatus = 1;\n    buttonTwo.classList.remove('pressed');\n  }\n}\n\nfunction checkLocalStorage(movieId, storageMovies) {\n\n  if (storageMovies === null) {\n    return false;\n  }\n\n  let storageMoviesArray = storageMovies.split(\",\");\n  console.log(storageMoviesArray);\n\n  for (movie of storageMoviesArray) {\n    if (movie === movieId) {\n      return true;\n    } \n  }\n\n  return false;\n \n}\n\nfunction removeIdLocalStorage(movieId, storageMovies) {\n  let storageMoviesArray = storageMovies.split(\",\");\n\n  for (let i = 0; i < storageMoviesArray.length; i += 1) {\n    if (storageMoviesArray[i] === movieId) {\n      storageMoviesArray.splice(i, 1);\n      break;\n    } \n  }\n  return storageMoviesArray.join(\",\");\n\n}"],"names":["$207a3ea07bed49c3$var$movieId","$cHsZg","parcelRequire","$207a3ea07bed49c3$var$refs","openModalContainer","document","querySelector","modalCloseBtn","modal","modalMovieCardContainer","$207a3ea07bed49c3$var$buttonWatchedStatus","$207a3ea07bed49c3$var$buttonQueueStatus","$207a3ea07bed49c3$var$onFetchMoviesByIdError","innerHTML","$207a3ea07bed49c3$var$renderMovieModalCard","movieInfo","console","log","concat","poster_path","original_title","vote_average","vote_count","popularity","toFixed","overview","addEventListener","$207a3ea07bed49c3$var$onButtonAddToWatched","$207a3ea07bed49c3$var$onButtonAddToQueue","$207a3ea07bed49c3$var$checkLocalStorage","localStorage","getItem","$207a3ea07bed49c3$var$setButtonWatchedStatus","$207a3ea07bed49c3$var$setButtonQueueStatus","event","watchedMovies","setItem","queueMovies","$207a3ea07bed49c3$var$removeIdLocalStorage","classList","contains","renderLibraryMovies","watchedMovies1","queueMovies1","buttonStatus","buttonOne","add","remove","buttonTwo","movieId1","storageMovies","storageMoviesArray","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","movie","value","err","return","movieId2","i","length","splice","join","preventDefault","elementOnClick","target","closest","getAttribute","body","toggle","$kitKc","fetchMoviesById","then","catch","window","code"],"version":3,"file":"library.4c610615.js.map"}