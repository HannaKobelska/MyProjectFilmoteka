{"mappings":"YAAA,IAAMA,EAAW,gCACXC,EAAS,mCAqBR,SAASC,EAAkBC,EAAMC,GAEpC,IAAMC,EAAaF,EAAKG,QAAQ,IAAK,KAIrC,OAFAC,QAAQC,IAAI,GAAmCC,OAAhCT,EAAS,yBAAuCS,OAAhBR,EAAO,WAA4BQ,OAAnBJ,EAAW,UAAmBI,OAAXL,IAE3EM,MAAM,GAAmCD,OAAhCT,EAAS,yBAAuCS,OAAhBR,EAAO,WAA4BQ,OAAnBJ,EAAW,UAAmBI,OAAXL,IAC9EO,MAAK,SAAAC,GACF,OAAOA,EAASC,UC5B5B,IDEoCT,ECF9BU,EAAO,CACXC,gBAAiBC,SAASC,cAAc,2BACxCC,cAAeF,SAASC,cAAc,2BACtCE,eAAgBH,SAASC,cAAc,eAEvCG,aAAcJ,SAASC,cAAc,4BAGnCI,EAAa,EAEbC,EAAc,GA6FlB,SAASC,EAAkBC,GAEzBjB,QAAQC,IAAIgB,GAEVV,EAAKC,gBAAgBU,UAAYD,EAAOE,QAAQC,KAAI,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAASF,EAATE,UAAWC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,aAAgBJ,EAAFK,GAChG,MAAO,0JAG8DxB,OAArBoB,EAAY,WAEhBpB,OAFyBsB,EAAM,gJAI9BtB,OAFDsB,EAAM,yHAINtB,OA/FpD,SAAoBqB,GAGlB,IAFA,IAAII,EAAY,GAEPC,EAAI,EAAGA,EAAIL,EAAUM,OAAQD,GAAK,EACzC,IAAK,IAAIE,EAAI,EAAGA,EAAIf,EAAYc,OAAQC,GAAK,EAC3C,GAAIP,EAAUK,KAAOb,EAAYe,GAAGJ,GAAI,CAKtC,GAJIE,GAAK,IACPD,GAAa,MAGXC,GAAK,EAEP,OADAD,EAAa,QAIfA,GAAaZ,EAAYe,GAAGlC,KAC5B,MAKN,OAAO+B,EAwE4CI,CAAWR,GAAW,2IAEArB,OAvE3E,SAAkBuB,GAEhB,OADmB,IAAIO,KAAKP,GACRQ,cAqE8BC,CAAST,GAAc,qGAQlEU,KAAK,IASd,SAASC,IACP7B,EAAKM,aAAawB,UAAUC,OAAO,aACnCC,YAAW,WACThC,EAAKM,aAAawB,UAAUG,IAAI,eAC/B,KD7HMrC,MAAM,GAAuCD,OAApCT,EAAS,6BAAkCS,OAAPR,IAC/CU,MAAK,SAAAC,GACF,OAAOA,EAASC,UCDzBF,MAAK,SAACqC,GAEL,IAAK,IAAIb,EAAI,EAAGA,EAAIa,EAAMC,OAAOb,OAAQD,GAAK,EAC5Cb,EAAY4B,KAAKF,EAAMC,OAAOd,QDfA/B,ECmDhBiB,EDjDTX,MAAM,GAA0CD,OAAvCT,EAAS,gCAA6CS,OAAfR,EAAO,UAAmBQ,OAAXL,IACjEO,MAAK,SAAAC,GACF,OAAOA,EAASC,WCgDnBF,KAAKY,GACX4B,MAAMR,GAGT7B,EAAKI,cAAckC,iBAAiB,UAEpC,SAAsBC,GACpBA,EAAMC,iBAEN/C,QAAQC,IAAI,mBAEVa,EAAa,EAEb,IAAMkC,EAAczC,EAAKK,eAAeqC,MAAMC,OAE1CF,EAAYnB,OAAS,GAErBlC,EAAkBqD,EAAalC,GAC9BV,KAAKY,GACL4B,MAAMR,M","sources":["src/js/fetchMovies.js","src/index.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst MY_KEY = 'e09801b88bee36721ddccafeb1a578e0';\n\n\nexport function fetchMoviesTrending(pageNumber) {\n   \n    return fetch(`${BASE_URL}trending/movie/week?api_key=${MY_KEY}&page=${pageNumber}`)\n        .then(response => {\n            return response.json();\n        }\n  );\n}\n\nexport function fetchMoviesGenres() {\n   \n    return fetch(`${BASE_URL}genre/movie/list?api_key=${MY_KEY}`)\n        .then(response => {\n            return response.json();\n        }\n  );\n}\n\nexport function fetchMoviesByName(name, pageNumber) {\n\n    const searchName = name.replace(\" \", \"+\");\n\n    console.log(`${BASE_URL}search/movie?api_key=${MY_KEY}&query=${searchName}&page=${pageNumber}`);\n   \n    return fetch(`${BASE_URL}search/movie?api_key=${MY_KEY}&query=${searchName}&page=${pageNumber}`)\n        .then(response => {\n            return response.json();\n        }\n        );\n}","import { fetchMoviesTrending, fetchMoviesGenres, fetchMoviesByName } from './js/fetchMovies.js';\n\nconst refs = {\n  moviesContainer: document.querySelector('.movies-cards-container'),\n  formSearchBox: document.querySelector('.header-input-container'),\n  inputSearchBox: document.querySelector('#search-box'),\n\n  errorMessage: document.querySelector('.header-error-container'),\n  };\n\nlet pageNumber = 1;\n\nlet genresArray = [];\n\n\nfetchMoviesGenres()\n  .then((genre) => {\n\n    for (let i = 0; i < genre.genres.length; i += 1) {\n      genresArray.push(genre.genres[i]);\n    }\n\n  });\n\nfunction genresById(genre_ids) {\n  let resultstr = \"\";\n\n  for (let i = 0; i < genre_ids.length; i += 1) {\n    for (let b = 0; b < genresArray.length; b += 1) {\n      if (genre_ids[i] === genresArray[b].id) {\n        if (i >= 1) {\n          resultstr += \", \";\n        }\n\n        if (i >= 2) {\n          resultstr += \"Other\";\n          return resultstr;\n        }\n        \n        resultstr += genresArray[b].name;\n        break;\n      } \n    } \n  }\n  \n  return resultstr;\n}\n\nfunction filmDate(release_date) {\n  let filmYearDate = new Date(release_date);\n  return filmYearDate.getFullYear();\n}\n\n\n\nfetchMoviesTrending(pageNumber)\n        .then(renderMoviesCards)\n  .catch(onFetchError);\n        \n\nrefs.formSearchBox.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  \n  console.log(\"kjsfhlajshfjaks\");\n\n    pageNumber = 1;\n    \n    const movieToFind = refs.inputSearchBox.value.trim();\n  \n    if (movieToFind.length > 0) {\n         \n        fetchMoviesByName(movieToFind, pageNumber)\n        .then(renderMoviesCards)\n        .catch(onFetchError);\n\n    }\n}\n\n\n\n// refs.searchForm.addEventListener('submit', onFormSubmit);\n// refs.loadMoreBtn.addEventListener('click', onFormLoadMore);\n\n\n\n// function onFormLoadMore(event) {\n//     event.preventDefault();\n\n//     pageNumber += 1;\n\n//     const pictureToFind = refs.searchInput.value.trim();\n  \n//     if (pictureToFind.length !== 0) {\n         \n//         API.fetchPictures(pictureToFind, pageNumber)\n//         .then(renderPictureCard)\n//         .catch(onFetchError);\n\n//     }\n// }\n\n\n\nfunction renderMoviesCards(movies) {\n\n  console.log(movies);\n\n    refs.moviesContainer.innerHTML = movies.results.map(({ poster_path, genre_ids, title, release_date, id }) => {\n        return `\n        <div class=\"movie-card\">\n        <a href=\"\" class=\"movie-card-link\" data-modal-open>\n            <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${title}\" class=\"movie-card-img\" width = \"300px\">\n            <div class=\"movie-card-info-set\">\n                <h3 class=\"movie-card-info-title\">${title}</h3>\n                <div class=\"movie-card-info-details-set\">\n                  <p class=\"movie-card-info-genre\">${genresById(genre_ids)}</p>\n                  <p class=\"movie-card-info-genre\"> &nbsp; &#124; &nbsp; </p>\n                  <p class=\"movie-card-info-date\">${filmDate(release_date)}</p>\n                </div>\n            </div>\n         </a>\n       \n        </div>\n    `;\n})\n        .join('');\n    \n//     refs.loadMoreBtn.style.visibility = 'visible';\n    \n//     lightbox.refresh();\n    \n}\n\n\nfunction onFetchError() {\n  refs.errorMessage.classList.remove('is-hidden');\n  setTimeout(() => {\n    refs.errorMessage.classList.add('is-hidden');\n  }, 2000);\n}\n\n"],"names":["$ec6c8fa7e3d4acfc$var$BASE_URL","$ec6c8fa7e3d4acfc$var$MY_KEY","$ec6c8fa7e3d4acfc$export$37a4223ecda5c4cf","name","pageNumber","searchName","replace","console","log","concat","fetch","then","response","json","$b8f9b7833fa37166$var$refs","moviesContainer","document","querySelector","formSearchBox","inputSearchBox","errorMessage","$b8f9b7833fa37166$var$pageNumber","$b8f9b7833fa37166$var$genresArray","$b8f9b7833fa37166$var$renderMoviesCards","movies","innerHTML","results","map","param","poster_path","genre_ids","title","release_date","id","resultstr","i","length","b","$b8f9b7833fa37166$var$genresById","Date","getFullYear","$b8f9b7833fa37166$var$filmDate","join","$b8f9b7833fa37166$var$onFetchError","classList","remove","setTimeout","add","genre","genres","push","catch","addEventListener","event","preventDefault","movieToFind","value","trim"],"version":3,"file":"index.fc52a76a.js.map"}