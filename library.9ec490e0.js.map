{"mappings":"2pBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACTC,gBAAiBC,SAASC,cAAc,2BAExCC,SAAUF,SAASC,cAAc,0BACjCE,SAAUH,SAASC,cAAc,yBAIrC,IAEIG,EAAc,GAIX,SAASC,IACZ,GAAsB,OAAlBP,EAAKI,SAGT,GAAIJ,EAAKI,SAASI,UAAUC,SAAS,oBAAqB,CAC1D,IACIC,EADgBC,aAAaC,QAAQ,kBACFC,MAAM,KAI7C,IAAKC,SAFLd,EAAKC,gBAAgBc,UAAY,GAEnBL,GACVM,QAAQC,IAAIH,QACZ,EAAAhB,EAAAoB,iBAAgBJ,OACXK,KAAKC,GACLC,MAAMC,QAGP,GAAItB,EAAKK,SAASG,UAAUC,SAAS,oBAAqB,CAClE,IACIC,EADcC,aAAaC,QAAQ,gBACFC,MAAM,KAI3C,IAAKC,SAFLd,EAAKC,gBAAgBc,UAAY,GAEnBL,GACVM,QAAQC,IAAIH,QACZ,EAAAhB,EAAAoB,iBAAgBJ,OACXK,KAAKC,GACLC,MAAMC,IA2CnB,SAASF,EAAwBN,GANjC,IAAkBS,EAQdvB,EAAKC,gBAAgBc,WACrB,4GAEkED,EAAMU,+DACpBV,EAAMW,qBAAqBX,EAAMY,qJAErCZ,EAAMY,6HAnC1D,SAAoBC,GAChBX,QAAQC,IAAIU,GACd,IAAIC,EAAY,GAEhB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAUG,OAAQD,GAAK,EAAG,CAKxC,GAJIA,GAAK,IACPD,GAAa,MAGXC,GAAK,EAEP,OADAD,GAAa,QACNA,EAGTA,GAAaD,EAAUE,GAAGE,KAIhC,OAAOH,EAmB4CI,CAAWlB,EAAMmB,iJAhBpDV,EAkB2CT,EAAMS,aAjB9C,IAAIW,KAAKX,GACRY,8GA2BtB,SAASb,IACPtB,EAAKoC,aAAa5B,UAAU6B,OAAO,aACnCC,YAAW,KACTtC,EAAKoC,aAAa5B,UAAU+B,IAAI,eAC/B,KAnGLhC,KAoCA,EAAAT,EAAA0C,qBACGrB,MAAMsB,IAEL,IAAK,IAAIZ,EAAI,EAAGA,EAAIY,EAAMR,OAAOH,OAAQD,GAAK,EAC5CvB,EAAYoC,KAAKD,EAAMR,OAAOJ,U,kQCtDpC,MACMc,EAAS,mCAGR,SAASC,EAAoBC,GAEhC,OAAOC,MAAM,4DAA0CH,UAAeE,KACjE1B,MAAK4B,GACKA,EAASC,SAKrB,SAASC,IAEZ,OAAOH,MAAM,yDAAuCH,KAC/CxB,MAAK4B,GACKA,EAASC,SAKrB,SAASE,EAAkBnB,EAAMc,GAEpC,MAAMM,EAAapB,EAAKqB,QAAQ,IAAK,KAIrC,OAFApC,QAAQC,IAAI,qDAAmC0B,WAAgBQ,UAAmBN,KAE3EC,MAAM,qDAAmCH,WAAgBQ,UAAmBN,KAC9E1B,MAAK4B,GACKA,EAASC,SAKrB,SAASK,EAAgBC,GAI5B,OAFAtC,QAAQC,IAAI,sCAAoBqC,aAAmBX,KAE5CG,MAAM,sCAAoBQ,aAAmBX,KAC/CxB,MAAK4B,GACKA,EAASC,a","sources":["src/js/library.js","src/js/fetchMovies.js"],"sourcesContent":["import { fetchMoviesTrending, fetchMoviesGenres, fetchMoviesByName, fetchMoviesById } from './fetchMovies.js';\n\nconst refs = {\n    moviesContainer: document.querySelector('.movies-cards-container'),\n\n    watchBtn: document.querySelector('#header-watched-button'),\n    queueBtn: document.querySelector('#header-queue-button'),\n    \n  };\n\nlet pageNumber = 1;\n\nlet genresArray = [];\n\nrenderLibraryMovies();\n\nexport function renderLibraryMovies() {\n    if (refs.watchBtn === null) {\n        return;\n    }\n    if (refs.watchBtn.classList.contains('is-header-active')) {\n    let watchedMovies = localStorage.getItem(\"watched-movies\");\n    let storageMoviesArray = watchedMovies.split(\",\");\n        \n    refs.moviesContainer.innerHTML = \"\";\n\n    for (movie of storageMoviesArray) {\n        console.log(movie);\n        fetchMoviesById(movie)\n            .then(renderChoosenMoviesCard)\n            .catch(onFetchError);\n    }\n    } else {\n            if (refs.queueBtn.classList.contains('is-header-active')) {\n    let queueMovies = localStorage.getItem(\"queue-movies\");\n    let storageMoviesArray = queueMovies.split(\",\");\n        \n    refs.moviesContainer.innerHTML = \"\";\n\n    for (movie of storageMoviesArray) {\n        console.log(movie);\n        fetchMoviesById(movie)\n            .then(renderChoosenMoviesCard)\n            .catch(onFetchError);\n    }\n}\n}\n}\n\n\nfetchMoviesGenres()\n  .then((genre) => {\n\n    for (let i = 0; i < genre.genres.length; i += 1) {\n      genresArray.push(genre.genres[i]);\n    }\n\n  });\n\nfunction genresById(genre_ids) {\n    console.log(genre_ids);\n  let resultstr = \"\";\n\n  for (let i = 0; i < genre_ids.length; i += 1) {\n        if (i >= 1) {\n          resultstr += \", \";\n        }\n\n        if (i >= 2) {\n          resultstr += \"Other\";\n          return resultstr;\n        }\n        \n        resultstr += genre_ids[i].name;\n      \n      } \n  \n  return resultstr;\n}\n\nfunction filmDate(release_date) {\n  let filmYearDate = new Date(release_date);\n  return filmYearDate.getFullYear();\n}\n\n\nfunction renderChoosenMoviesCard(movie) {\n\n    refs.moviesContainer.innerHTML += \n    `\n        <div class=\"movie-card\" >\n        <a href=\"\" class=\"movie-card-link\" data-modal-open data-id=\"${movie.id}\">\n            <img src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"${movie.title}\" class=\"movie-card-img\" width = \"300px\">\n            <div class=\"movie-card-info-set\"> \n                <h3 class=\"movie-card-info-title\">${movie.title}</h3>\n                <div class=\"movie-card-info-details-set\">\n                  <p class=\"movie-card-info-genre\">${genresById(movie.genres)}</p>\n                  <p class=\"movie-card-info-genre\"> &nbsp; &#124; &nbsp; </p>\n                  <p class=\"movie-card-info-date\">${filmDate(movie.release_date)}</p>\n                </div>\n            </div>\n         </a>\n       \n        </div>\n    `;\n    \n}\n\n\nfunction onFetchError() {\n  refs.errorMessage.classList.remove('is-hidden');\n  setTimeout(() => {\n    refs.errorMessage.classList.add('is-hidden');\n  }, 2000);\n}\n\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst MY_KEY = 'e09801b88bee36721ddccafeb1a578e0';\n\n\nexport function fetchMoviesTrending(pageNumber) {\n   \n    return fetch(`${BASE_URL}trending/movie/week?api_key=${MY_KEY}&page=${pageNumber}`)\n        .then(response => {\n            return response.json();\n        }\n  );\n}\n\nexport function fetchMoviesGenres() {\n   \n    return fetch(`${BASE_URL}genre/movie/list?api_key=${MY_KEY}`)\n        .then(response => {\n            return response.json();\n        }\n  );\n}\n\nexport function fetchMoviesByName(name, pageNumber) {\n\n    const searchName = name.replace(\" \", \"+\");\n\n    console.log(`${BASE_URL}search/movie?api_key=${MY_KEY}&query=${searchName}&page=${pageNumber}`);\n   \n    return fetch(`${BASE_URL}search/movie?api_key=${MY_KEY}&query=${searchName}&page=${pageNumber}`)\n        .then(response => {\n            return response.json();\n        }\n    );\n}\n\nexport function fetchMoviesById(movieId) {\n\n    console.log(`${BASE_URL}movie/${movieId}?api_key=${MY_KEY}`);\n   \n    return fetch(`${BASE_URL}movie/${movieId}?api_key=${MY_KEY}`)\n        .then(response => {\n            return response.json();\n        }\n        );\n}\n"],"names":["$1TPJ0","parcelRequire","$1cafa503bc57b7a0$var$refs","moviesContainer","document","querySelector","watchBtn","queueBtn","$1cafa503bc57b7a0$var$genresArray","$1cafa503bc57b7a0$export$50fa949290769984","classList","contains","storageMoviesArray","localStorage","getItem","split","movie","innerHTML","console","log","fetchMoviesById","then","$1cafa503bc57b7a0$var$renderChoosenMoviesCard","catch","$1cafa503bc57b7a0$var$onFetchError","release_date","id","poster_path","title","genre_ids","resultstr","i","length","name","$1cafa503bc57b7a0$var$genresById","genres","Date","getFullYear","errorMessage","remove","setTimeout","add","fetchMoviesGenres","genre","push","$16230cf6cab73dd4$var$MY_KEY","$16230cf6cab73dd4$export$435d5e7d4a23c51f","pageNumber","fetch","response","json","$16230cf6cab73dd4$export$f03f8f8d4d9c836f","$16230cf6cab73dd4$export$37a4223ecda5c4cf","searchName","replace","$16230cf6cab73dd4$export$9bbf2c609430497f","movieId"],"version":3,"file":"library.9ec490e0.js.map"}